std::string BigInt::to_hex() const
{
  // TODO: implement
  if (value.empty()) {
        return "0";
  }

  std::stringstream s;


  if (isNegative) { // make sure negative numbers have the - sign 
        s << "-";
  }
  s << std::hex << std::setfill('0'); // output numbers in hexadecimal and fill empty spots with leading zeros
  bool haveReachedNonzeroDigit = false;

  for (auto it = value.rbegin(); it != value.rend(); ++it) {

      if (*it != 0) {
        haveReachedNonzeroDigit = true;
        s << *it; // for the first digit, you do not want to pad with leading zeros.
        continue; 
      }

      if (haveReachedNonzeroDigit) {
        s << std::setw(16) << *it; // for digits besides the first digit, you do want to pad with leading zeros.
      }

  }
  // if all zeros, return "0"
  // otherwise, return the hexadecimal representation 
 
  return haveReachedNonzeroDigit ? s.str() : "0";

}
